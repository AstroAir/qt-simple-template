name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  QT_VERSION: 6.7.0
  CMAKE_VERSION: 3.28.0
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  build-and-test:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows MSVC",
              os: windows-latest,
              preset: "Debug-Windows",
              build_preset: "Debug-Windows",
              artifact: "windows-msvc",
              qt_arch: "win64_msvc2022_64"
            }
          - {
              name: "Windows MSVC Release",
              os: windows-latest,
              preset: "Release-Windows", 
              build_preset: "Release-Windows",
              artifact: "windows-msvc-release",
              qt_arch: "win64_msvc2022_64"
            }
          - {
              name: "Ubuntu GCC",
              os: ubuntu-latest,
              preset: "Debug-Unix",
              build_preset: "Debug-Unix", 
              artifact: "ubuntu-gcc",
              qt_arch: "gcc_64"
            }
          - {
              name: "Ubuntu GCC Release",
              os: ubuntu-latest,
              preset: "Release-Unix",
              build_preset: "Release-Unix",
              artifact: "ubuntu-gcc-release", 
              qt_arch: "gcc_64"
            }
          - {
              name: "macOS Clang",
              os: macos-latest,
              preset: "Debug-Unix",
              build_preset: "Debug-Unix",
              artifact: "macos-clang",
              qt_arch: "clang_64"
            }
          - {
              name: "macOS Clang Release", 
              os: macos-latest,
              preset: "Release-Unix",
              build_preset: "Release-Unix",
              artifact: "macos-clang-release",
              qt_arch: "clang_64"
            }

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Set up vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: '4887ad6d1414f74cb7cb8d1e527fb46adb4e9ace'

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        arch: ${{ matrix.config.qt_arch }}
        cache: true
        cache-key-prefix: ${{ runner.os }}-qt

    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          libgl1-mesa-dev \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-xinerama0 \
          libxcb-xfixes0 \
          xvfb

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake ninja

    - name: Setup MSVC (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      run: cmake --preset ${{ matrix.config.preset }}

    - name: Build
      run: cmake --build --preset ${{ matrix.config.build_preset }}

    - name: Test
      run: |
        cd build/${{ contains(matrix.config.preset, 'Windows') && 'Debug-Windows' || (contains(matrix.config.preset, 'Release') && 'Release' || 'Debug') }}
        ctest --output-on-failure --parallel 4
      env:
        QT_QPA_PLATFORM: ${{ runner.os == 'Linux' && 'offscreen' || '' }}
        DISPLAY: ${{ runner.os == 'Linux' && ':99' || '' }}

    - name: Start Xvfb (Linux)
      if: runner.os == 'Linux'
      run: |
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

    - name: Package application
      if: contains(matrix.config.preset, 'Release')
      run: |
        cd build/${{ contains(matrix.config.preset, 'Windows') && 'Release-Windows' || 'Release' }}
        cmake --build . --target package

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.config.artifact }}
        path: |
          build/*/app/
          build/*/lib/
          !build/*/app/**/*.pdb
          !build/*/lib/**/*.pdb
        retention-days: 7

    - name: Upload packages
      if: contains(matrix.config.preset, 'Release')
      uses: actions/upload-artifact@v4
      with:
        name: packages-${{ matrix.config.artifact }}
        path: |
          build/*/*.exe
          build/*/*.dmg
          build/*/*.deb
          build/*/*.rpm
          build/*/*.tar.gz
          build/*/*.zip
        retention-days: 30
